
AVRASM ver. 2.1.30  D:\Program Files\Project\Manchester code\cv\List\code.asm Mon May 16 09:02:58 2011

                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATtiny2313
                 ;Program type             : Application
                 ;Clock frequency          : 8,000000 MHz
                 ;Memory model             : Tiny
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 32 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATtiny2313
                 	#pragma AVRPART MEMORY PROG_FLASH 2048
                 	#pragma AVRPART MEMORY EEPROM 128
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 128
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU WDTCR=0x21
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x13
                 	.EQU GPIOR1=0x14
                 	.EQU GPIOR2=0x15
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	SUBI R26,-@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	SUBI R26,-@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	SUBI R26,-@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	SUBI R26,-@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	SUBI R26,-@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	SUBI R26,-@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOV  R26,R@0
                 	SUBI R26,-@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOV  R26,R@0
                 	SUBI R26,-@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOV  R26,R@0
                 	SUBI R26,-@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOV  R26,R@0
                 	SUBI R26,-@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOV  R26,R@0
                 	SUBI R26,-@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOV  R26,R@0
                 	SUBI R26,-@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	SUBI R26,-@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	SUBI R26,-@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	SUBI R26,-@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	SUBI R26,-@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	SUBI R26,-@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	SUBI R26,-@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 c02b      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G100:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001c 003d
00001d 0023      	.DB  0x3D,0x0,0x23,0x0
                 _0x202005F:
D:\Program Files\Project\Manchester code\cv\List\code.asm(987): warning: .cseg .db misalignment - padding zero byte
00001e 0001      	.DB  0x1
                 _0x2020000:
00001f 4e2d
000020 4e41
D:\Program Files\Project\Manchester code\cv\List\code.asm(989): warning: .cseg .db misalignment - padding zero byte
000021 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
000022 0002      	.DW  0x02
000023 0080      	.DW  _0x6
000024 0038      	.DW  _0x0*2
                 
000025 0002      	.DW  0x02
000026 0082      	.DW  _0x6+2
000027 003a      	.DW  _0x0*2+2
                 
000028 0001      	.DW  0x01
000029 0084      	.DW  __seed_G101
00002a 003c      	.DW  _0x202005F*2
                 
                 _0xFFFFFFFF:
00002b 0000      	.DW  0
                 
                 __RESET:
00002c 94f8      	CLI
00002d 27ee      	CLR  R30
00002e bbec      	OUT  EECR,R30
00002f bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000030 e1f8      	LDI  R31,0x18
000031 b7a4      	IN   R26,MCUSR
000032 7fa7      	CBR  R26,8
000033 bfa4      	OUT  MCUSR,R26
000034 bdf1      	OUT  WDTCR,R31
000035 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000036 e08d      	LDI  R24,(14-2)+1
000037 e0a2      	LDI  R26,2
                 __CLEAR_REG:
000038 93ed      	ST   X+,R30
000039 958a      	DEC  R24
00003a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00003b e880      	LDI  R24,LOW(0x80)
00003c e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
00003d 93ed      	ST   X+,R30
00003e 958a      	DEC  R24
00003f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000040 e4e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000041 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000042 9185      	LPM  R24,Z+
000043 9195      	LPM  R25,Z+
000044 9700      	SBIW R24,0
000045 f061      	BREQ __GLOBAL_INI_END
000046 91a5      	LPM  R26,Z+
000047 91b5      	LPM  R27,Z+
000048 9005      	LPM  R0,Z+
000049 9015      	LPM  R1,Z+
00004a 01bf      	MOVW R22,R30
00004b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00004c 9005      	LPM  R0,Z+
00004d 920d      	ST   X+,R0
00004e 9701      	SBIW R24,1
00004f f7e1      	BRNE __GLOBAL_INI_LOOP
000050 01fb      	MOVW R30,R22
000051 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0-GPIOR2 INITIALIZATION
000052 e0e0      	LDI  R30,0x00
000053 bbe3      	OUT  GPIOR0,R30
000054 bbe4      	OUT  GPIOR1,R30
000055 bbe5      	OUT  GPIOR2,R30
                 
                 ;STACK POINTER INITIALIZATION
000056 edef      	LDI  R30,LOW(0xDF)
000057 bfed      	OUT  SPL,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000058 e8c0      	LDI  R28,LOW(0x80)
                 
000059 c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x80
                 
                 	.CSEG
                 ;#include <tiny2313.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x50
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_standby=0x40
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;
                 ;void main(void)
                 ; 0000 000C {
                 
                 	.CSEG
                 _main:
                 ; 0000 000D // Declare your local variables here
                 ; 0000 000E char *sym1;
                 ; 0000 000F char *sym2;
                 ; 0000 0010 char a,c,d;
                 ; 0000 0011 d=0;
                 ;	*sym1 -> R17
                 ;	*sym2 -> R16
                 ;	a -> R19
                 ;	c -> R18
                 ;	d -> R21
00005a e050      	LDI  R21,LOW(0)
                 ; 0000 0012 
                 ; 0000 0013 // Crystal Oscillator division factor: 1
                 ; 0000 0014 #pragma optsize-
                 ; 0000 0015 CLKPR=0x80;
00005b e8e0      	LDI  R30,LOW(128)
00005c bde6      	OUT  0x26,R30
                 ; 0000 0016 CLKPR=0x00;
00005d e0e0      	LDI  R30,LOW(0)
00005e bde6      	OUT  0x26,R30
                 ; 0000 0017 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0018 #pragma optsize+
                 ; 0000 0019 #endif
                 ; 0000 001A 
                 ; 0000 001B // Input/Output Ports initialization
                 ; 0000 001C // Port A initialization
                 ; 0000 001D // Func2=In Func1=In Func0=In
                 ; 0000 001E // State2=T State1=T State0=T
                 ; 0000 001F PORTA=0x00;
00005f bbeb      	OUT  0x1B,R30
                 ; 0000 0020 DDRA=0x00;
000060 bbea      	OUT  0x1A,R30
                 ; 0000 0021 
                 ; 0000 0022 // Port B initialization
                 ; 0000 0023 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0024 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0025 PORTB=0x00;
000061 bbe8      	OUT  0x18,R30
                 ; 0000 0026 DDRB=0xff;
000062 efef      	LDI  R30,LOW(255)
000063 bbe7      	OUT  0x17,R30
                 ; 0000 0027 
                 ; 0000 0028 // Port D initialization
                 ; 0000 0029 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 002A // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 002B PORTD=0x00;
000064 e0e0      	LDI  R30,LOW(0)
000065 bbe2      	OUT  0x12,R30
                 ; 0000 002C DDRD=0x40;
000066 e4e0      	LDI  R30,LOW(64)
000067 bbe1      	OUT  0x11,R30
                 ; 0000 002D 
                 ; 0000 002E // Timer/Counter 0 initialization
                 ; 0000 002F // Clock source: System Clock
                 ; 0000 0030 // Clock value: Timer 0 Stopped
                 ; 0000 0031 // Mode: Normal top=FFh
                 ; 0000 0032 // OC0A output: Disconnected
                 ; 0000 0033 // OC0B output: Disconnected
                 ; 0000 0034 TCCR0A=0x00;
000068 e0e0      	LDI  R30,LOW(0)
000069 bfe0      	OUT  0x30,R30
                 ; 0000 0035 TCCR0B=0x00;
00006a bfe3      	OUT  0x33,R30
                 ; 0000 0036 TCNT0=0x00;
00006b bfe2      	OUT  0x32,R30
                 ; 0000 0037 OCR0A=0x00;
00006c bfe6      	OUT  0x36,R30
                 ; 0000 0038 OCR0B=0x00;
00006d bfec      	OUT  0x3C,R30
                 ; 0000 0039 
                 ; 0000 003A // Timer/Counter 1 initialization
                 ; 0000 003B // Clock source: System Clock
                 ; 0000 003C // Clock value: Timer1 Stopped
                 ; 0000 003D // Mode: Normal top=FFFFh
                 ; 0000 003E // OC1A output: Discon.
                 ; 0000 003F // OC1B output: Discon.
                 ; 0000 0040 // Noise Canceler: Off
                 ; 0000 0041 // Input Capture on Falling Edge
                 ; 0000 0042 // Timer1 Overflow Interrupt: Off
                 ; 0000 0043 // Input Capture Interrupt: Off
                 ; 0000 0044 // Compare A Match Interrupt: Off
                 ; 0000 0045 // Compare B Match Interrupt: Off
                 ; 0000 0046 TCCR1A=0x00;
00006e bdef      	OUT  0x2F,R30
                 ; 0000 0047 TCCR1B=0x00;
00006f bdee      	OUT  0x2E,R30
                 ; 0000 0048 TCNT1H=0x00;
000070 bded      	OUT  0x2D,R30
                 ; 0000 0049 TCNT1L=0x00;
000071 bdec      	OUT  0x2C,R30
                 ; 0000 004A ICR1H=0x00;
000072 bde5      	OUT  0x25,R30
                 ; 0000 004B ICR1L=0x00;
000073 bde4      	OUT  0x24,R30
                 ; 0000 004C OCR1AH=0x00;
000074 bdeb      	OUT  0x2B,R30
                 ; 0000 004D OCR1AL=0x00;
000075 bdea      	OUT  0x2A,R30
                 ; 0000 004E OCR1BH=0x00;
000076 bde9      	OUT  0x29,R30
                 ; 0000 004F OCR1BL=0x00;
000077 bde8      	OUT  0x28,R30
                 ; 0000 0050 
                 ; 0000 0051 // External Interrupt(s) initialization
                 ; 0000 0052 // INT0: Off
                 ; 0000 0053 // INT1: Off
                 ; 0000 0054 // Interrupt on any change on pins PCINT0-7: Off
                 ; 0000 0055 GIMSK=0x00;
000078 bfeb      	OUT  0x3B,R30
                 ; 0000 0056 MCUCR=0x00;
000079 bfe5      	OUT  0x35,R30
                 ; 0000 0057 
                 ; 0000 0058 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0059 TIMSK=0x00;
00007a bfe9      	OUT  0x39,R30
                 ; 0000 005A 
                 ; 0000 005B // Universal Serial Interface initialization
                 ; 0000 005C // Mode: Disabled
                 ; 0000 005D // Clock source: Register & Counter=no clk.
                 ; 0000 005E // USI Counter Overflow Interrupt: Off
                 ; 0000 005F USICR=0x00;
00007b b9ed      	OUT  0xD,R30
                 ; 0000 0060 
                 ; 0000 0061 // USART initialization
                 ; 0000 0062 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0063 // USART Receiver: On
                 ; 0000 0064 // USART Transmitter: On
                 ; 0000 0065 // USART Mode: Asynchronous
                 ; 0000 0066 // USART Baud Rate: 600
                 ; 0000 0067 UCSRA=0x00;
00007c b9eb      	OUT  0xB,R30
                 ; 0000 0068 UCSRB=0x18;
00007d e1e8      	LDI  R30,LOW(24)
00007e b9ea      	OUT  0xA,R30
                 ; 0000 0069 UCSRC=0x06;
00007f e0e6      	LDI  R30,LOW(6)
000080 b9e3      	OUT  0x3,R30
                 ; 0000 006A UBRRH=0x03;
000081 e0e3      	LDI  R30,LOW(3)
000082 b9e2      	OUT  0x2,R30
                 ; 0000 006B UBRRL=0x40;
000083 e4e0      	LDI  R30,LOW(64)
000084 b9e9      	OUT  0x9,R30
                 ; 0000 006C 
                 ; 0000 006D // Analog Comparator initialization
                 ; 0000 006E // Analog Comparator: Off
                 ; 0000 006F // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0070 ACSR=0x80;
000085 e8e0      	LDI  R30,LOW(128)
000086 b9e8      	OUT  0x8,R30
                 ; 0000 0071 
                 ; 0000 0072 while (1)
                 _0x3:
                 ; 0000 0073 {
                 ; 0000 0074 sym2 = gets(sym1,3);
000087 931a      	ST   -Y,R17
000088 e0e3      	LDI  R30,LOW(3)
000089 93ea      	ST   -Y,R30
00008a d044      	RCALL _gets
00008b 2f0e      	MOV  R16,R30
                 ; 0000 0075 puts ("=");
                +
00008c e8e0     +LDI R30 , LOW ( _0x6 + ( 0 ) )
                 	__POINTB1MN _0x6,0
00008d 93ea      	ST   -Y,R30
00008e d030      	RCALL _puts
                 ; 0000 0076 puts (sym2);
00008f 930a      	ST   -Y,R16
000090 d02e      	RCALL _puts
                 ; 0000 0077 puts ("#");
                +
000091 e8e2     +LDI R30 , LOW ( _0x6 + ( 2 ) )
                 	__POINTB1MN _0x6,2
000092 93ea      	ST   -Y,R30
000093 d02b      	RCALL _puts
                 ; 0000 0078 d=c;
000094 2f52      	MOV  R21,R18
                 ; 0000 0079 c = atoi (sym2);
000095 930a      	ST   -Y,R16
000096 d057      	RCALL _atoi
000097 2f2e      	MOV  R18,R30
                 ; 0000 007A PORTB = c;
000098 bb28      	OUT  0x18,R18
                 ; 0000 007B 
                 ; 0000 007C       if (d != c)
000099 1725      	CP   R18,R21
00009a f0c1      	BREQ _0x7
                 ; 0000 007D         {
                 ; 0000 007E         for (a=0;a<8;a++)
00009b e030      	LDI  R19,LOW(0)
                 _0x9:
00009c 3038      	CPI  R19,8
00009d f4a8      	BRSH _0xA
                 ; 0000 007F             {
                 ; 0000 0080             if (PORTB&0x01)
00009e 9bc0      	SBIS 0x18,0
00009f c004      	RJMP _0xB
                 ; 0000 0081                 {
                 ; 0000 0082                 PORTD.6=0;
0000a0 9896      	CBI  0x12,6
                 ; 0000 0083                 delay_ms (100);
0000a1 d08d      	RCALL SUBOPT_0x0
                 ; 0000 0084                 PORTD.6=1;
0000a2 9a96      	SBI  0x12,6
                 ; 0000 0085                 delay_ms (100);
0000a3 c003      	RJMP _0x16
                 ; 0000 0086                 }
                 ; 0000 0087             else
                 _0xB:
                 ; 0000 0088                 {
                 ; 0000 0089                 PORTD.6=1;
0000a4 9a96      	SBI  0x12,6
                 ; 0000 008A                 delay_ms (100);
0000a5 d089      	RCALL SUBOPT_0x0
                 ; 0000 008B                 PORTD.6=0;
0000a6 9896      	CBI  0x12,6
                 ; 0000 008C                 delay_ms (100);
                 _0x16:
0000a7 e6e4      	LDI  R30,LOW(100)
0000a8 e0f0      	LDI  R31,HIGH(100)
0000a9 93fa      	ST   -Y,R31
0000aa 93ea      	ST   -Y,R30
0000ab d088      	RCALL _delay_ms
                 ; 0000 008D                 };
                 ; 0000 008E             PORTB>>=1;
0000ac b3e8      	IN   R30,0x18
0000ad e0f0      	LDI  R31,0
0000ae 95f5      	ASR  R31
0000af 95e7      	ROR  R30
0000b0 bbe8      	OUT  0x18,R30
                 ; 0000 008F             };
0000b1 5f3f      	SUBI R19,-1
0000b2 cfe9      	RJMP _0x9
                 _0xA:
                 ; 0000 0090         };
                 _0x7:
                 ; 0000 0091 
                 ; 0000 0092 
                 ; 0000 0093 
                 ; 0000 0094 };
0000b3 cfd3      	RJMP _0x3
                 ; 0000 0095 }
                 _0x15:
0000b4 cfff      	RJMP _0x15
                 
                 	.DSEG
                 _0x6:
000080           	.BYTE 0x4
                 ;
                 ;
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 getchar0:
0000b5 9b5f           sbis usr,rxc
0000b6 cffe           rjmp getchar0
0000b7 b1ec           in   r30,udr
0000b8 9508      	RET
                 _putchar:
                 putchar0:
0000b9 9b5d           sbis usr,udre
0000ba cffe           rjmp putchar0
0000bb 81e8           ld   r30,y
0000bc b9ec           out  udr,r30
0000bd 9621      	ADIW R28,1
0000be 9508      	RET
                 _puts:
0000bf 931a      	ST   -Y,R17
                 _0x2000003:
0000c0 81a9      	LDD  R26,Y+1
0000c1 91ed      	LD   R30,X+
0000c2 83a9      	STD  Y+1,R26
0000c3 2f1e      	MOV  R17,R30
0000c4 30e0      	CPI  R30,0
0000c5 f019      	BREQ _0x2000005
0000c6 931a      	ST   -Y,R17
0000c7 dff1      	RCALL _putchar
0000c8 cff7      	RJMP _0x2000003
                 _0x2000005:
0000c9 e0ea      	LDI  R30,LOW(10)
0000ca 93ea      	ST   -Y,R30
0000cb dfed      	RCALL _putchar
0000cc 8118      	LDD  R17,Y+0
0000cd 9622      	ADIW R28,2
0000ce 9508      	RET
                 _gets:
0000cf d070      	RCALL __SAVELOCR4
0000d0 811c      	LDD  R17,Y+4
0000d1 810d      	LDD  R16,Y+5
                 _0x2000009:
0000d2 3010      	CPI  R17,0
0000d3 f099      	BREQ _0x200000B
                 _0x200000C:
0000d4 dfe0      	RCALL _getchar
0000d5 2f3e      	MOV  R19,R30
0000d6 3038      	CPI  R19,8
0000d7 f431      	BRNE _0x200000D
0000d8 81ac      	LDD  R26,Y+4
0000d9 171a      	CP   R17,R26
0000da f410      	BRSH _0x200000E
0000db 5001      	SUBI R16,LOW(1)
0000dc 5f1f      	SUBI R17,-LOW(1)
                 _0x200000E:
0000dd cff6      	RJMP _0x200000C
                 _0x200000D:
0000de 303a      	CPI  R19,10
0000df f039      	BREQ _0x200000B
0000e0 930f      	PUSH R16
0000e1 5f0f      	SUBI R16,-1
0000e2 2fe3      	MOV  R30,R19
0000e3 91af      	POP  R26
0000e4 93ec      	ST   X,R30
0000e5 5011      	SUBI R17,LOW(1)
0000e6 cfeb      	RJMP _0x2000009
                 _0x200000B:
0000e7 2fa0      	MOV  R26,R16
0000e8 e0e0      	LDI  R30,LOW(0)
0000e9 93ec      	ST   X,R30
0000ea 81ed      	LDD  R30,Y+5
0000eb d059      	RCALL __LOADLOCR4
0000ec 9626      	ADIW R28,6
0000ed 9508      	RET
                 
                 	.CSEG
                 _atoi:
0000ee 27bb          clr  r27
0000ef 81a8          ld   r26,y
                 __atoi0:
0000f0 91ec          ld   r30,x
0000f1 93ea      	ST   -Y,R30
0000f2 d032      	RCALL _isspace
0000f3 23ee          tst  r30
0000f4 f011          breq __atoi1
0000f5 9611          adiw r26,1
0000f6 cff9          rjmp __atoi0
                 __atoi1:
0000f7 94e8          clt
0000f8 91ec          ld   r30,x
0000f9 32ed          cpi  r30,'-'
0000fa f411          brne __atoi2
0000fb 9468          set
0000fc c002          rjmp __atoi3
                    	__atoi2:
0000fd 32eb          cpi  r30,'+'
0000fe f409          brne __atoi4
                 __atoi3:
0000ff 9611          adiw r26,1
                     __atoi4:
000100 2766          clr  r22
000101 2777          clr  r23
                 __atoi5:
000102 91ec          ld   r30,x
000103 93ea      	ST   -Y,R30
000104 d018      	RCALL _isdigit
000105 23ee          tst  r30
000106 f079          breq __atoi6
000107 01fb          movw r30,r22
000108 0f66          lsl  r22
000109 1f77          rol  r23
00010a 0f66          lsl  r22
00010b 1f77          rol  r23
00010c 0f6e          add  r22,r30
00010d 1f7f          adc  r23,r31
00010e 0f66          lsl  r22
00010f 1f77          rol  r23
000110 91ed          ld   r30,x+
000111 27ff          clr  r31
000112 53e0          subi r30,'0'
000113 0f6e          add  r22,r30
000114 1f7f          adc  r23,r31
000115 cfec          rjmp __atoi5
                 __atoi6:
000116 01fb          movw r30,r22
000117 f41e          brtc __atoi7
000118 95e0          com  r30
000119 95f0          com  r31
00011a 9631          adiw r30,1
                 __atoi7:
00011b 9621          adiw r28,1
00011c 9508          ret
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _isdigit:
00011d e0e1          ldi  r30,1
00011e 91f9          ld   r31,y+
00011f 33f0          cpi  r31,'0'
000120 f010          brlo isdigit0
000121 33fa          cpi  r31,'9'+1
000122 f008          brlo isdigit1
                 isdigit0:
000123 27ee          clr  r30
                 isdigit1:
000124 9508          ret
                 _isspace:
000125 e0e1          ldi  r30,1
000126 91f9          ld   r31,y+
000127 32f0          cpi  r31,' '
000128 f029          breq isspace1
000129 30f9          cpi  r31,9
00012a f010          brlo isspace0
00012b 30fe          cpi  r31,13+1
00012c f008          brlo isspace1
                 isspace0:
00012d 27ee          clr  r30
                 isspace1:
00012e 9508          ret
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G101:
000084           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
00012f e6e4      	LDI  R30,LOW(100)
000130 e0f0      	LDI  R31,HIGH(100)
000131 93fa      	ST   -Y,R31
000132 93ea      	ST   -Y,R30
000133 c000      	RJMP _delay_ms
                 
                 
                 	.CSEG
                 _delay_ms:
000134 91e9      	ld   r30,y+
000135 91f9      	ld   r31,y+
000136 9630      	adiw r30,0
000137 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000138 ed80     +LDI R24 , LOW ( 0x7D0 )
000139 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00013a 9701     +SBIW R24 , 1
00013b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00013c 95a8      	wdr
00013d 9731      	sbiw r30,1
00013e f7c9      	brne __delay_ms0
                 __delay_ms1:
00013f 9508      	ret
                 
                 __SAVELOCR4:
000140 933a      	ST   -Y,R19
                 __SAVELOCR3:
000141 932a      	ST   -Y,R18
                 __SAVELOCR2:
000142 931a      	ST   -Y,R17
000143 930a      	ST   -Y,R16
000144 9508      	RET
                 
                 __LOADLOCR4:
000145 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000146 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000147 8119      	LDD  R17,Y+1
000148 8108      	LD   R16,Y
000149 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATtiny2313 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  10 r17:  12 r18:   6 r19:   9 r20:   0 r21:   3 r22:  10 r23:   6 
r24:   9 r25:   2 r26:  15 r27:   2 r28:   5 r29:   0 r30: 113 r31:  21 
x  :  10 y  :  36 z  :   7 
Registers used: 19 out of 35 (54.3%)

ATtiny2313 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   2 
adiw  :   8 and   :   0 andi  :   0 asr   :   1 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   9 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   4 
brlt  :   0 brmi  :   0 brne  :   8 brpl  :   0 brsh  :   2 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :   2 
cbr   :   1 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   7 
cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 cp    :   2 
cpc   :   0 cpi   :  12 cpse  :   0 dec   :   2 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   3 
inc   :   0 ld    :  12 ldd   :   9 ldi   :  37 lds   :   0 lpm   :   7 
lsl   :   3 lsr   :   0 mov   :   7 movw  :   5 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :  45 
pop   :   1 push  :   1 rcall :  15 ret   :  10 reti  :   0 rjmp  :  35 
rol   :   3 ror   :   1 sbc   :   0 sbci  :   0 sbi   :   2 sbic  :   0 
sbis  :   3 sbiw  :   4 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   1 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  24 std   :   1 
sts   :   0 sub   :   0 subi  :   6 swap  :   0 tst   :   2 wdr   :   1 

Instructions used: 43 out of 114 (37.7%)

ATtiny2313 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000294    610     50    660    2048  32.2%
[.dseg] 0x000060 0x000088      0      8      8     128   6.3%
[.eseg] 0x000000 0x000000      0      0      0     128   0.0%

Assembly complete, 0 errors, 2 warnings
